procedure: eqv? obj1 obj2
procedure: eq? obj1 obj2
procedure: number? obj
procedure: complex? obj
procedure: real? obj
procedure: rational? obj
procedure: integer? obj
procedure: exact? z
procedure: inexact? z
procedure: = z1 z2 z3 ...
procedure: < x1 x2 x3 ...
procedure: > x1 x2 x3 ...
procedure: <= x1 x2 x3 ...
procedure: >= x1 x2 x3 ...
procedure: + z1 ...
procedure: * z1 ...
procedure: - z1 z2
procedure: - z
procedure: / z1 z2
procedure: / z
procedure: quotient n1 n2
procedure: remainder n1 n2
procedure: modulo n1 n2
procedure: numerator q
procedure: denominator q
procedure: floor x
procedure: ceiling x
procedure: truncate x
procedure: round x
procedure: exp z
procedure: log z
procedure: sin z
procedure: cos z
procedure: tan z
procedure: asin z
procedure: acos z
procedure: atan z
procedure: atan y x
procedure: sqrt z
procedure: expt z1 z2
procedure: make-rectangular x1 x2
procedure: make-polar x3 x4
procedure: real-part z
procedure: imag-part z
procedure: magnitude z
procedure: angle z
procedure: exact->inexact z
procedure: inexact->exact z
procedure: number->string z
procedure: number->string z radix
procedure: string->number string
procedure: string->number string radix
procedure: pair? obj
procedure: cons obj1 obj2
procedure: car pair
procedure: cdr pair
procedure: set-car! pair obj
procedure: set-cdr! pair obj
procedure: symbol? obj
procedure: symbol->string symbol
procedure: string->symbol string
procedure: char? obj
procedure: char=? char1 char2
procedure: char<? char1 char2
procedure: char>? char1 char2
procedure: char<=? char1 char2
procedure: char>=? char1 char2
procedure: char->integer char
procedure: integer->char n
procedure: string? obj
procedure: make-string k
procedure: make-string k char
procedure: string-length string
procedure: string-ref string k
procedure: string-set! string k char
procedure: vector? obj
procedure: make-vector k
procedure: make-vector k fill
procedure: vector-length vector
procedure: vector-ref vector k
procedure: vector-set! vector k obj
procedure: procedure? obj
procedure: apply proc arg1 ... args
procedure: call-with-current-continuation proc
procedure: values obj ...
procedure: call-with-values producer consumer
procedure: dynamic-wind before thunk after
procedure: eval expression environment-specifier
procedure: scheme-report-environment version
procedure: null-environment version
procedure: input-port? obj
procedure: output-port? obj
procedure: current-input-port
procedure: current-output-port
procedure: open-input-file filename
procedure: open-output-file filename
procedure: close-input-port port
procedure: close-output-port port
procedure: read-char
procedure: read-char port
procedure: peek-char
procedure: peek-char port
procedure: eof-object? obj
procedure: char-ready?
procedure: char-ready? port
procedure: write-char char
procedure: write-char char port
